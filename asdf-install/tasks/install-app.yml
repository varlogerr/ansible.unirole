---
- fail: msg="asdf_apps.name is required"
  when: _asdf_apps_app.name is undefined

- set_fact:
    _asdf_apps_app_name: "{{ _asdf_apps_app.name }}"

- set_fact:
    _asdf_apps_app_install_prefix: "{{ asdf_apps_install_prefixes[_asdf_apps_app_name] | default('') }}"

- name: "install {{ _asdf_apps_app_name }} plugin"
  command: "bash -lc 'asdf plugin-add {{ _asdf_apps_app_name }}'"
  args:
    creates: "{{ asdf_dir }}/plugins/{{ _asdf_apps_app_name }}"

- block:
  - set_fact:
      _asdf_apps_app_version: "{{ _asdf_apps_app.version }}"

  - name: "install {{ _asdf_apps_app_name }} deps"
    apt: name="{{ packages }}" install_recommends=no state=present
    vars:
      packages: "{{ asdf_apps_deps[_asdf_apps_app_name] }}"
    when: asdf_apps_deps[_asdf_apps_app_name] is defined
    become: true

  - name: "install {{ _asdf_apps_app_name }}:{{ _asdf_apps_app_version }}"
    command: "bash -lc '{{ _asdf_apps_app_install_prefix }} asdf install {{ _asdf_apps_app_name }} {{ _asdf_apps_app_version }}'"
    args:
      creates: "{{ asdf_dir }}/installs/{{ _asdf_apps_app_name }}/{{ _asdf_apps_app_version }}"

  - block:
    - name: "set {{ _asdf_apps_app_name }}:{{ _asdf_apps_app_version }} as global"
      command: "bash -lc 'asdf global {{ _asdf_apps_app_name }} {{ _asdf_apps_app_version }}'"

    - include_tasks: "{{ item }}"
      with_first_found:
      - files:
        - post-globalize/{{ _asdf_apps_app_name }}.yml
        skip: true
    when: _asdf_apps_app.globalize is defined and _asdf_apps_app.globalize
  when: _asdf_apps_app.version is defined
